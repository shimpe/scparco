TITLE:: ScpMapFactory
summary:: a factory for commonly used map functions
categories:: Parsing Tools
related:: Classes/ScpParser

DESCRIPTION::
ScpMapFactory is a util that can create commonly used map functions.



CLASSMETHODS::

METHOD:: new
creates a new ScpMapFactory

returns:: a new ScpMapFactory
METHOD:: tag
creates a map function that wraps a parse result in an event with keys (\tagname : parseresult)

ARGUMENT:: tagname
tagname (will be transformed to a symbol)

returns:: a function that, when called with a parse result, wraps it in an event with keys (\tagname: parseresult) (see example code)
METHOD:: log
creates a map function doesn't modify the result, but logs a message to the post window = debugging tool

ARGUMENT:: msg
msg (will be printed to post window)

returns:: a function that, when called with a parse result, returns that same result after printing something to the post window

INSTANCEMETHODS::

METHOD:: init
initializes the parser factory (but in reality it does nothing :))

returns:: ScpMapFactory

EXAMPLES::

code::
	(
	var stream = Int8Array[0xF0];
	var binparser = ScpParserFactory.makeBinaryUIntParser(8).map(ScpMapFactory.tag(\startOfSysex));
	var result = binparser.run(stream);
	result.result.postcs;
	)
	
::
